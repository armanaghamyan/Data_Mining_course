knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(DAAG)
library(rpart)
library(rpart.plot)
library(rattle)
library(dplyr)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(DAAG)
library(rpart)
library(rpart.plot)
library(rattle)
library(dplyr)
library(caret)
class_err_a1<-1-max(7/9,2/9)
class_err_a2<-1-max(5/9,4/9)
class_err_a1<class_err_a2
a1<-1-((7/9)^2+(2/9)^2)
a2<-1-((5/9)^2+(4/9)^2)
a1<a2
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(DAAG)
library(rpart)
library(rpart.plot)
library(rattle)
library(dplyr)
library(caret)
data("spam7")
train_index<-createDataPartition(spam7$yesno,p = 0.9,list = F)
Train<-spam7[train_index,]
Test<-spam7[-train_index,]
dim(Train)
dim(Test)
dim(Train)
dim(Test)
model_tree_1 = train(response ~ .,
data =Train,
method = "rpart")
model_tree_1 = train(yesno ~ .,
data =Train,
method = "rpart")
prp(model_tree_1)
model_tree_1
library(ggplot2)
library(rpart)
model_tree_1
model_tree_1$bestTune
ggplot(model_tree_1)
rpart.plot(model_tree_1$finalModel)
prp(model_tree_1$finalModel, digits = 4, roundint = F)
imp1 = varImp(model_tree_1)
ggplot(imp1)
rpart.plot(model_tree_1$finalModel)
rpart.plot(model_tree_1$finalModel)
imp1 = varImp(model_tree_1)
ggplot(imp1)
model_full<-rpart(yesno~.,data=spam7)
prp(model_full)
fancyRpartPlot(model_full)
fancyRpartPlot(model_full)
prp(model_full,extra = 1)
fancyRpartPlot(model_full)
prp(model_full,extra = 1)
prp(model_full,extra = 2)
prp(model_full,extra = 1)
prp(model_full,extra = 2)
fancyRpartPlot(model_full)
model_2<-rpart(yesno~.,data = Train,minbucket=nrow(Train)*0.25)
prp(model_2)
nrow(Train)*0.25
model_2<-rpart(yesno~.,data = Train,minbucket=1035)
prp(model_2)
set.seed(42)
data("spam7")
train_index<-createDataPartition(spam7$yesno,p = 0.9,list = F)
Train<-spam7[train_index,]
Test<-spam7[-train_index,]
dim(Train)
dim(Test)
model_full<-rpart(yesno~.,data=spam7)
prp(model_full,extra = 2)
nrow(Train)*0.25
prp(model_full,extra = 2)
nrow(Train)*0.25
model_2<-rpart(yesno~.,data = Train,minbucket=1035)
prp(model_2)
set.seed(1)
train_index<-createDataPartition(spam7$yesno,p = 0.9,list = F)
Test<-spam7[-train_index,]
dim(Train)
dim(Test)
prp(model_full,extra = 2)
nrow(Train)*0.25
model_2<-rpart(yesno~.,data = Train,minbucket=1035)
prp(model_2)
asRules(model_full)
pred_1raw = predict(model_full, newdata = Test, type = "raw")/
pred_1prob = predict(model_full, newdata = Test, type = "prob")
pred_1raw = predict(model_full, newdata = Test, type = "raw")
pred_1prob = predict(model_full, newdata = Test, type = "prob")
pred_1raw = predict(model_full, newdata = Test, type = "class")
pred_1prob = predict(model_full, newdata = Test, type = "prob")
pred_1prob = predict(model_full, newdata = Test, type = "prob")[,2]
pred_1prob
pred_1raw = predict(model_full, newdata = Test, type = "class")
conf_matr_full = confusionMatrix(pred_1raw, data = Train$yesno,positive = "Yes")
conf_matr_full = confusionMatrix(pred_1raw, data = Test$yesno,positive = "Yes")
conf_matr_full = confusionMatrix(pred_1raw, data = Test$yesno,positive = "y")
conf_matr_full
pred_1class = predict(model_full, newdata = Test, type = "class")
conf_matr_full = confusionMatrix(pred_1class, data = Test$yesno,positive = "y")
conf_matr_full
pred_full = prediction(pred_1prob, Test$yesno)
library(ROCR)
ROC2 = performance(pred_tree_2, "tpr", "fpr")
pred_full = prediction(pred_1prob, Test$yesno)
ROC2 = performance(pred_tree_2, "tpr", "fpr")
ROC2 = performance(pred_full, "tpr", "fpr")
plot(ROC2)
perf_full = performance(pred_full, measure = "auc")
AUC_full = perf_full@y.values
AUC_full
pred_2class = predict(model_2, newdata = Test, type = "class")
pred_2prob = predict(model_2, newdata = Test, type = "prob")[,2]
conf_matr_2 = confusionMatrix(pred_2class, data = Test$yesno,positive = "y")
conf_matr_2
pred_2 = prediction(pred_2prob, Test$yesno)
ROC_full = performance(pred_full, "tpr", "fpr")
plot(ROC_full)
ROC_2 = performance(pred_2, "tpr", "fpr")
plot(ROC_2)
perf_2 = performance(pred_2, measure = "auc")
AUC_2 = perf_2@y.values
AUC_2
AUC_full
plot(ROC_full)
conf_matr_full
AUC_full
conf_matr_2
plot(ROC_2)
plot(ROC_full)
AUC_2
AUC_full
