plt1<-ggroc(Roc,alpha = 0.5, colour = "red", linetype = 1, size = 1)+ggtitle("ROC curve for Model")
plt1
plt1<-ggroc(Roc,alpha = 0.5, colour = "red", linetype = 1, size = 1)+ggtitle("ROC curve of the Model")
plt1
pr_AIC<-predict(model_AIC,newdata = Test,type = 'response')
prAIC_class<-ifelse(pr_AIC>0.5,1,0)
Roc2<-roc(Test$class,pr_AIC)
plt2<-ggroc(Roc2,alpha = 0.5, colour = "green", linetype = 1, size = 1)+ggtitle("ROC curve of the AIC Model ")
grid.arrange(plt1, plt22,nrow=1)
library(gridExtra)
grid.arrange(plt1, plt22,nrow=1)
grid.arrange(plt1, plt2,nrow=1)
plt2<-ggroc(Roc2,alpha = 0.5, colour = "blue", linetype = 1, size = 1)+ggtitle("ROC curve of the AIC Model ")
grid.arrange(plt1, plt2,nrow=1)
library(ROCR)
p_test<-prediction(pred,test$class)
performance(P_Test,"auc")@y.values
FPR<-unlist(perf@x.values)
TPR<-unlist(perf@y.values)
Alpha<-unlist(perf@alpha.values)
bio<-data.frame(FPR,TPR,alpha)
bios<-data.frame(FPR,TPR,Alpha)
library(ROCR)
P_Test<-prediction(prl,Test$class)
perf<-performance(P_Test,"tpr","fpr")
plot(perf,colorize=T)
performance(P_Test,"auc")@y.values
FPR<-unlist(perf@x.values)
TPR<-unlist(perf@y.values)
Alpha<-unlist(perf@alpha.values)
bios<-data.frame(FPR,TPR,Alpha)
ggplot(bios,aes(x=))
library(pROC)
Roc<-roc(Test$class,pr_class)
plt1<-ggroc(Roc,alpha = 0.5, colour = "red", linetype = 1, size = 1)+ggtitle("ROC curve of the Model")
plt1
pr_AIC<-predict(model_AIC,newdata = Test,type = 'response')
prAIC_class<-ifelse(pr_AIC>0.5,1,0)
Roc2<-roc(Test$class,pr_AIC)
plt2<-ggroc(Roc2,alpha = 0.5, colour = "blue", linetype = 1, size = 1)+ggtitle("ROC curve of the AIC Model ")
grid.arrange(plt1, plt2,nrow=1)
perf<-performance(P_Test,"prec","rec")
plot(perf,colorize=T)
performance(P_Test,"auc")@y.values
Recall<-unlist(perf@x.values)
Precision<-unlist(perf@y.values)
Alpha<-unlist(perf@alpha.values)
bios<-data.frame(Recall,Precision,Alpha)
ggplot(bios,aes(x=Recall,y=Precision,color=Alpha))+geom_line()+ theme_bw()+ labs(x='Recall',y='Precision',title='Precision-Recall curve',color='Cutoff values')
P_Test2<-predicition(pr_AIC,Test$class)
perf2<performance(P_Test2,'prec','rec')
P_Test2<-predicition(pr_AIC,Test$class)
P_Test2<-prediction(pr_AIC,Test$class)
perf2<-performance(P_Test2,'prec','rec')
plot(perf2,colorize=T)
performance(P_Test2,"auc")@y.values
Recall<-unlist(perf2@x.values)
Precision<-unlist(perf2@y.values)
Alpha<-unlist(perf2@alpha.values)
bios2<-data.frame(Recall,Precision,Alpha)
PRC_AIC<-ggplot(bios2,aes(x=Recall,y=Precision,color=Alpha))+geom_line()+ theme_bw()+ labs(x='Recall',y='Precision',title='Precision-Recall curve',color='Cutoff values')
PRC_AIC
grid.arrange(PRC1,PRC_AIC,nrow=1)
PRC1<-ggplot(bios,aes(x=Recall,y=Precision,color=Alpha))+geom_line()+ theme_bw()+ labs(x='Recall',y='Precision',title='Precision-Recall curve',color='Cutoff values')
grid.arrange(PRC1,PRC_AIC,nrow=1)
PRC1<-ggplot(bios,aes(x=Recall,y=Precision,color=Alpha))+geom_line()+ theme_bw()+ labs(x='Recall',y='Precision',title='Precision-Recall curve by Best Model',color='Cutoff values')
PRC_AIC<-ggplot(bios2,aes(x=Recall,y=Precision,color=Alpha))+geom_line()+ theme_bw()+ labs(x='Recall',y='Precision',title='Precision-Recall curve by AIC Model',color='Cutoff values')
grid.arrange(PRC1,PRC_AIC,nrow=1)
grid.arrange(plt1, plt2,nrow=1)
grid.arrange(PRC1,PRC_AIC,nrow=1)
summary(model2)
exp(coef(model2))
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
num<-bio%>% select_if(is.numeric)
library(MASS)
library(dplyr)
library(zoo)
bio<-read.csv("biodata.csv",na.strings = "?")
str(bio)
any(duplicated(bio$id))
bio<-select(bio,-c(id,sc, pcv,pe))
any(is.na(bio))
bio$su<-ordered(bio$su,levels=c(0,1,2,3,4,5))
bio$class<-as.factor(bio$class)
nm<- sapply(bio, is.numeric)
bio[nm] <- lapply(bio[nm], na.aggregate)
bio[nm]<-round(bio[nm])
bio<-na.omit(bio)
str(bio)
library(ggplot2)
library(gridExtra)
library(ggcorrplot)
num<-bio%>% select_if(is.numeric)
ggcorrplot(cor(num), hc.order = TRUE, type = "lower",
lab = TRUE)
b1<-ggplot(data = bio, aes(y =age, x = class,color = class))+
geom_boxplot()+
scale_x_discrete(labels= levels(bio$class) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Presence of Chronic Kidney Disease by Age " ,color =  "Presence of  Disease",y='Age',x="Presence of Chronic Kidney Disease")+
theme(plot.title = element_text(hjust = 1))
b2<-ggplot(data = bio, aes(y =bgr, x = class,color = class))+
geom_boxplot()+
scale_x_discrete(labels= levels(bio$class) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Presence of Disease by Blood Glucose Random (mgs/dl) " ,color =  "Presence of  Disease",y='Blood Glucose Random (mgs/dl)',x="Presence of Chronic Kidney Disease")+
theme(plot.title = element_text(hjust = 1))
grid.arrange(b1,b2,nrow=1)
pr_AIC
gpaf<-read.csv('gpafactors.csv')
chi_sq<-sum(resid(model3,type = "pearson")^2)   # Pearson statistics
library(dplyr)
library(tidyr)
data<-read.csv("awards.csv")
str(data)
data<-select(data,-c(X,id_num,date))
data<-separate(data,school.prog,c("school","prog"),sep="/")
data$school<-as.factor(data$school)
data$prog<-factor(data$prog,labels =c("General","Pre-Academic","Academic","Vocational"))
data$imp<-ordered(data$imp,labels=c("Not Important","Neutral","Important","Very Important"))
glimpse(data)
library(vcd)
library(scales)
library(ggplot2)
library(gridExtra)
ggplot()+geom_histogram(aes(x=data$awards))+labs(x="Awards",title="Histogram")+ scale_x_continuous(breaks=pretty_breaks())
gf <- goodfit(data[,1], "poisson")
plot(gf, type = "standing", scale = "raw") #histogram of awards distribution
var(data$awards)
mean(data$awards)
b1<-ggplot(data = data, aes(y =awards, x = gender,color = gender))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$gender) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Gender" ,color =  "Gender",y='Awards',x="Gender")+
theme(plot.title = element_text(hjust = 1))
b1
b2<-ggplot(data = data, aes(y =awards, x = imp,color = imp))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$imp) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Importance of Getting It" ,color =  "Importance Levels",y='Awards',x="Importance Levels")+
theme(plot.title = element_text(hjust = 1))
b2
b3<-ggplot(data = data, aes(y =awards, x = school,color = school))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$school) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on School Type" ,color =  "School type",y='Awards',x="School Type")+
theme(plot.title = element_text(hjust = 1))
b3
grid.arrange(b1,b2,b3,nrow=2)
lo
library(vcd)
library(scales)
library(ggplot2)
library(gridExtra)
ggplot()+geom_histogram(aes(x=data$awards))+labs(x="Awards",title="Histogram")+ scale_x_continuous(breaks=pretty_breaks())
gf <- goodfit(data[,1], "poisson")
plot(gf, type = "standing", scale = "raw") #histogram of awards distribution
var(data$awards)
mean(data$awards)
b1<-ggplot(data = data, aes(y =awards, x = gender,color = gender))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$gender) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Gender" ,color =  "Gender",y='Awards',x="Gender")+
theme(plot.title = element_text(hjust = 1))
b1
b2<-ggplot(data = data, aes(y =awards, x = imp,color = imp))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$imp) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Importance of Getting It" ,color =  "Importance Levels",y='Awards',x="Importance Levels")+
theme(plot.title = element_text(hjust = 1))
b2
b3<-ggplot(data = data, aes(y =awards, x = school,color = school))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$school) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on School Type" ,color =  "School type",y='Awards',x="School Type")+
theme(plot.title = element_text(hjust = 1))
b3
grid.arrange(b1,b2,b3,nrow=2)
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(awards),mean=mean(awards))
model1<-glm(awards~school+prog+imp+gender,data = data,family = poisson(link=log))
summary(model1)
library(AER)
dispersiontest(model1,trafo=NULL)
model2<-glm(awards~1,data,family = poisson(link=log))
summary(model2)
exp(model2$coefficients)
mean(data$awards)
model3<-glm(awards~.-school-prog,data,family = poisson(link=log))
summary(model3)
exp(coef(model3))
predict(model3,newdata = data.frame(math=12,physics=10.7,hpw=3.5,gender='female',imp="Important",school='Private',prog='General'),type = "response")
ppois(15,lambda = 2.44,lower.tail = F)
chi_sq<-sum(resid(model3,type = "pearson")^2)   # Pearson statistics
chi_sq
chi_sq
pchisq(chi_sq,df=df.residual(model2),lower.tail = F) #p_value,we reject the null hiphotesis
pchisq(chi_sq,df=df.residual(model3),lower.tail = F) #p_value,we reject the null hiphotesis
dev_chisq<-sum(resid(model3,type = "deviance")^2)
dev_chisq
model3$deviance
pchisq(model3$deviance,df=df.residual(model3),lower.tail = F)
attach(awards)
require(data)
require(ISLR)
attach(data)
CRV<- rnorm(100, mean = 5)
data%>% group_by(CRV) %>%
summarise(var=var(awards),mean=mean(awards))
require(ISLR)
attach(data)
CRV<- rnorm(100, mean = 5)
data%>% group_by(CRV) %>%
summarise(var=var(awards),mean=mean(awards))
CRV
data$CRV
data$CRV<-CRV
data%>% group_by(CRV) %>%
summarise(var=var(awards),mean=mean(awards))
CRV
rep(1:20,length.out=10)
z<-rep(1:20,length.out=10)
mean(z)
var(z)
hist(z)
z<-rep(1:20,length.out=100)
hist(z)
z<-rep(1:20,each=20,length.out=100,mad())
hist(z)
z<-rep(1:20,each=20,length.out=100)
hist(z)
z<-rpois(100,lambda = 10)
hist(z)
z<-rpois(1000,lambda = 10)
hist(z)
z<-rpois(20,lambda = 3)
hist(z)
CRV<-rpois(20,lambda = 3)
data$CRV<-CRV
data%>% group_by(CRV) %>%
summarise(var=var(awards),mean=mean(awards))
CRV
CRV<-rpois(20,lambda = 3)
mean(CRV)
var(CRV)
CRV<-rpois(100,lambda = 3)
var(CRV)
mean(CRV)
CRV<-rpois(1000,lambda = 3)
var(CRV)
mean(CRV)
library(dplyr)
library(tidyr)
data<-read.csv("awards.csv")
str(data)
data<-select(data,-c(X,id_num,date))
data<-separate(data,school.prog,c("school","prog"),sep="/")
data$school<-as.factor(data$school)
data$prog<-factor(data$prog,labels =c("General","Pre-Academic","Academic","Vocational"))
data$imp<-ordered(data$imp,labels=c("Not Important","Neutral","Important","Very Important"))
glimpse(data)
library(vcd)
library(scales)
library(ggplot2)
library(gridExtra)
ggplot()+geom_histogram(aes(x=data$awards))+labs(x="Awards",title="Histogram")+ scale_x_continuous(breaks=pretty_breaks())
gf <- goodfit(data[,1], "poisson")
plot(gf, type = "standing", scale = "raw") #histogram of awards distribution
var(data$awards)
mean(data$awards)
b1<-ggplot(data = data, aes(y =awards, x = gender,color = gender))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$gender) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Gender" ,color =  "Gender",y='Awards',x="Gender")+
theme(plot.title = element_text(hjust = 1))
b1
b2<-ggplot(data = data, aes(y =awards, x = imp,color = imp))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$imp) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Importance of Getting It" ,color =  "Importance Levels",y='Awards',x="Importance Levels")+
theme(plot.title = element_text(hjust = 1))
b2
b3<-ggplot(data = data, aes(y =awards, x = school,color = school))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$school) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on School Type" ,color =  "School type",y='Awards',x="School Type")+
theme(plot.title = element_text(hjust = 1))
b3
grid.arrange(b1,b2,b3,nrow=2)
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(awards),mean=mean(awards))
model1<-glm(awards~school+prog+imp+gender,data = data,family = poisson(link=log))
summary(model1)
library(AER)
dispersiontest(model1,trafo=NULL)
model2<-glm(awards~1,data,family = poisson(link=log))
summary(model2)
exp(model2$coefficients)
mean(data$awards)
model3<-glm(awards~.-school-prog,data,family = poisson(link=log))
summary(model3)
exp(coef(model3))
predict(model3,newdata = data.frame(math=12,physics=10.7,hpw=3.5,gender='female',imp="Important",school='Private',prog='General'),type = "response")
ppois(15,lambda = 2.44,lower.tail = F)
chi_sq<-sum(resid(model3,type = "pearson")^2)   # Pearson statistics
chi_sq
pchisq(chi_sq,df=df.residual(model3),lower.tail = F)
dev_chisq<-sum(resid(model3,type = "deviance")^2) #deviance test
dev_chisq
model3$deviance
pchisq(model3$deviance,df=df.residual(model3),lower.tail = F)
rnbinom(n = n, mu = mu, size = mu/(theta-1))
rqpois &lt;- function(n, mu, theta) {
A<-function(n, mu, theta) {
rnbinom(n = n, mu = mu, size = mu/(theta-1))
}
A(n = 10000, mu = 3, theta = 5)
CRV<- A(n = 10000, mu = 3, theta = 5)
var(CRV)
mean(CRV)
var(CRV)
data$CRV<-CRV
CRV<- A(n = 2500, mu = 3, theta = 5)
var(CRV)
mean(CRV)
data$CRV<-CRV
data%>% group_by(CRV) %>%
summarise(var=var(CRV),mean=mean(CRV))
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(CRV),mean=mean(CRV))
data$awards
tail(data$awards)
CRV<- A(n = 2500, mu = 3, theta = 13)
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(CRV),mean=mean(CRV))
data$CRV<-CRV
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(CRV),mean=mean(CRV))
var(data$awards)
length(data$awards)
CRV<- A(n = 2500, mu = 3, theta = 13)
rnbinom(n = n, mu = mu, size = mu/(theta-1))
require(ISLR)
attach(data)
A<-function(n, mu, theta) {
rnbinom(n = n, mu = mu, size = mu/(theta-1))
}
prizes<- A(n = 2500, mu = 3, theta = 13)
data$prizes<-prizes
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(prizes),mean=mean(prizes))
require(ISLR)
attach(data)
A<-function(n, mu, theta) {
rnbinom(n = n, mu = mu, size = mu/(theta-1))
}
prizes<- A(n = 2500, mu = 3, theta = 5)
data$prizes<-prizes
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(prizes),mean=mean(prizes))
data%>% group_by(imp) %>%
summarise(var=var(prizes),mean=mean(prizes))
model4<-glm(prizes~.,data,family = poisson(link=log))
summary(model4)
library(dplyr)
library(tidyr)
data<-read.csv("awards.csv")
str(data)
data<-select(data,-c(X,id_num,date))
data<-separate(data,school.prog,c("school","prog"),sep="/")
data$school<-as.factor(data$school)
data$prog<-factor(data$prog,labels =c("General","Pre-Academic","Academic","Vocational"))
data$imp<-ordered(data$imp,labels=c("Not Important","Neutral","Important","Very Important"))
glimpse(data)
library(vcd)
library(scales)
library(ggplot2)
library(gridExtra)
ggplot()+geom_histogram(aes(x=data$awards))+labs(x="Awards",title="Histogram")+ scale_x_continuous(breaks=pretty_breaks())
gf <- goodfit(data[,1], "poisson")
plot(gf, type = "standing", scale = "raw") #histogram of awards distribution
var(data$awards)
mean(data$awards)
b1<-ggplot(data = data, aes(y =awards, x = gender,color = gender))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$gender) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Gender" ,color =  "Gender",y='Awards',x="Gender")+
theme(plot.title = element_text(hjust = 1))
b1
b2<-ggplot(data = data, aes(y =awards, x = imp,color = imp))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$imp) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on Importance of Getting It" ,color =  "Importance Levels",y='Awards',x="Importance Levels")+
theme(plot.title = element_text(hjust = 1))
b2
b3<-ggplot(data = data, aes(y =awards, x = school,color = school))+
geom_boxplot()+
scale_x_discrete(labels= levels(data$school) )+
stat_summary(fun.y = "mean",geom = 'point',col='red', shape=17, size=3)+
labs(title ="Having Awards Based on School Type" ,color =  "School type",y='Awards',x="School Type")+
theme(plot.title = element_text(hjust = 1))
b3
grid.arrange(b1,b2,b3,nrow=2)
data%>% group_by(school,prog,imp,gender) %>%
summarise(var=var(awards),mean=mean(awards))
model1<-glm(awards~school+prog+imp+gender,data = data,family = poisson(link=log))
summary(model1)
library(AER)
dispersiontest(model1,trafo=NULL)
model2<-glm(awards~1,data,family = poisson(link=log))
summary(model2)
exp(model2$coefficients)
mean(data$awards)
model3<-glm(awards~.-school-prog,data,family = poisson(link=log))
summary(model3)
exp(coef(model3))
predict(model3,newdata = data.frame(math=12,physics=10.7,hpw=3.5,gender='female',imp="Important",school='Private',prog='General'),type = "response")
ppois(15,lambda = 2.44,lower.tail = F)
chi_sq<-sum(resid(model3,type = "pearson")^2)   # Pearson statistics
chi_sq
pchisq(chi_sq,df=df.residual(model3),lower.tail = F)
dev_chisq<-sum(resid(model3,type = "deviance")^2) #deviance test
dev_chisq
model3$deviance
pchisq(model3$deviance,df=df.residual(model3),lower.tail = F)
#require(ISLR)
#attach(data)
A<-function(n, mu, theta) {
rnbinom(n = n, mu = mu, size = mu/(theta-1))
}
prizes<- A(n = 2500, mu = 3, theta = 5)
data$prizes<-prizes
data%>% group_by(imp) %>%
summarise(var=var(prizes),mean=mean(prizes))
model4<-glm(prizes~.,data,family = poisson(link=log))
summary(model4)
exp(coef(model4))
model4<-glm(prizes~.-math,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw-gender,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw-gender-school,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-gender-school,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-hpw-gender-school,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw-school,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw-gender-school,data,family = poisson(link=log))
summary(model4)
model4<-glm(prizes~.-math-prog-hpw-school,data,family = poisson(link=log))
summary(model4)
exp(coef(model4))
dispersiontest(model4)
dispersiontest(model4,traffo=NULL)
dispersiontest(model4,taffo=NULL)
dispersiontest(model4,trafo=NULL)
model_qp<-glm(prizes~.,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math-physics,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math-physics-prog,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math-physics-prog-gender,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math-physics-prog-gender-school,data,family=quasipoisson(link=log))
summary(model_qp)
model_qp<-glm(prizes~.-awards-math-physics-prog-gender-school-hpw,data,family=quasipoisson(link=log))
summary(model_qp)
library(MASS)
model_nb<-glm.nb(prizes~.,data = data)
summary(model_nb)
model_nb<-glm.nb(prizes~imp,data = data)
summary(model_nb)
exp(coef(model_qp))
model_qp<-glm(prizes~.,data,family=quasipoisson(link=log))
exp(coef(model_qp))
model_nb<-glm.nb(prizes~.,data = data)
exp(coef(model_nb))
deviance(model_nb)
deviance(model_qp)
model_qp<-glm(prizes~imp,data,family=quasipoisson(link=log))
model_nb<-glm.nb(prizes~imp,data = data)
deviance(model_nb)
deviance(model_qp)
deviance(model_nb)
model_qp<-glm(prizes~.,data,family=quasipoisson(link=log))
model_nb<-glm.nb(prizes~.,data = data)
deviance(model_nb)
deviance(model_qp)
